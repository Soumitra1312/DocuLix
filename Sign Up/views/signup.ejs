<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Signup | DocuLix</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="/styles.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
</head>
<body>

  <div class="container mt-5 p-5">
    <div class="row justify-content-center">
      <div class="col-md-6">

        <div class="card shadow-lg rounded-3">
          <div class="card-body p-4">
            <!-- DocuLix Logo/Brand -->
            <div class="text-center mb-4">
              <div class="brand-logo">
                <img src="/assets/img/logo.jpg" alt="DocuLix Logo" style="width: 80px; height: 80px; border-radius: 50%; margin-bottom: 1rem; object-fit: cover;" />
                <h2 class="brand-title">DocuLix</h2>
                <p style="color: #6c757d; font-size: 0.9rem; margin-bottom: 0;">Intelligent Legal Document Analysis</p>
              </div>
            </div>
            <h3 class="text-center mb-4">Join DocuLix</h3>

            <form action="/signup" method="POST">
              <!-- Username -->
              <div class="mb-3 form-group">
                <label for="username" class="form-label">Username</label>
                <span class="form-icon"><i class="fa fa-user"></i></span>
                <input 
                  type="text" 
                  name="username" 
                  id="username" 
                  class="form-control" 
                  placeholder="Enter your username" 
                  required>
              </div>

              <!-- Email -->
              <div class="mb-3 form-group">
                <label for="email" class="form-label">Email address</label>
                <span class="form-icon"><i class="fa fa-envelope"></i></span>
                <input 
                  type="email" 
                  name="email" 
                  id="email" 
                  class="form-control" 
                  placeholder="Enter your email" 
                  pattern="[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}"
                  title="Please enter a valid email address (e.g., user@example.com)"
                  required>
                <div class="invalid-feedback" id="email-error"></div>
              </div>

              <!-- Password -->
              <div class="mb-3 form-group">
                <label for="password" class="form-label">Password</label>
                <span class="form-icon"><i class="fa fa-lock"></i></span>
                <input 
                  type="password" 
                  name="password" 
                  id="password" 
                  class="form-control" 
                  placeholder="Enter your password" 
                  required>
              </div>
              <div class="mb-3 form-group">
                <label for="phone" class="form-label">Phone Number</label>
                <span class="form-icon"><i class="fa fa-phone"></i></span>
                <input 
                  type="tel" 
                  name="phone" 
                  id="phone" 
                  class="form-control" 
                  placeholder="9876543210 (10 digits)" 
                  pattern="[0-9]{10}"
                  title="Please enter a valid 10-digit phone number"
                  maxlength="10"
                  required>
                <div class="invalid-feedback" id="phone-error"></div>
              </div>

              <!-- Submit -->
              <button type="submit" class="btn btn-primary w-100">Sign Up</button>
            </form>

            <p class="text-center mt-3">
              Already have an account? <a href="/login">Log in</a>
            </p>
          </div>
        </div>

      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  
  <script>
    // Enhanced form interactions
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.querySelector('form');
      const submitBtn = document.querySelector('button[type="submit"]');
      const emailInput = document.getElementById('email');
      const phoneInput = document.getElementById('phone');
      
      // Email validation function
      function validateEmail(email) {
        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
        return emailRegex.test(email);
      }
      
      // Phone validation function
      function validatePhone(phone) {
        const phoneRegex = /^[0-9]{10}$/;
        return phoneRegex.test(phone);
      }
      
      // Real-time email validation
      emailInput.addEventListener('blur', function() {
        const email = this.value.trim();
        const errorDiv = document.getElementById('email-error');
        
        if (email && !validateEmail(email)) {
          this.classList.add('is-invalid');
          errorDiv.textContent = 'Please enter a valid email address';
          errorDiv.style.display = 'block';
        } else {
          this.classList.remove('is-invalid');
          this.classList.add('is-valid');
          errorDiv.style.display = 'none';
        }
      });
      
      // Real-time phone validation
      phoneInput.addEventListener('input', function() {
        // Remove non-numeric characters
        this.value = this.value.replace(/[^0-9]/g, '');
        
        const phone = this.value;
        const errorDiv = document.getElementById('phone-error');
        
        if (phone.length > 0 && phone.length !== 10) {
          this.classList.add('is-invalid');
          errorDiv.textContent = 'Phone number must be exactly 10 digits';
          errorDiv.style.display = 'block';
        } else if (phone.length === 10) {
          this.classList.remove('is-invalid');
          this.classList.add('is-valid');
          errorDiv.style.display = 'none';
        } else {
          this.classList.remove('is-invalid', 'is-valid');
          errorDiv.style.display = 'none';
        }
      });
      
      // Form submission validation
      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        let isValid = true;
        
        // Clear previous errors
        document.querySelectorAll('.is-invalid').forEach(el => el.classList.remove('is-invalid'));
        document.querySelectorAll('.invalid-feedback').forEach(el => el.style.display = 'none');
        
        // Validate email
        if (!validateEmail(emailInput.value.trim())) {
          emailInput.classList.add('is-invalid');
          document.getElementById('email-error').textContent = 'Please enter a valid email address';
          document.getElementById('email-error').style.display = 'block';
          isValid = false;
        }
        
        // Validate phone
        if (!validatePhone(phoneInput.value.trim())) {
          phoneInput.classList.add('is-invalid');
          document.getElementById('phone-error').textContent = 'Please enter a valid 10-digit phone number';
          document.getElementById('phone-error').style.display = 'block';
          isValid = false;
        }
        
        if (!isValid) {
          return false;
        }
        
        // Add loading state on form submission
        submitBtn.classList.add('btn-loading');
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<i class="fa fa-spinner fa-spin"></i> Creating Account...';
        
        try {
          const formData = new FormData(form);
          const response = await fetch('/signup', {
            method: 'POST',
            body: formData
          });
          
          if (response.ok) {
            // If successful, redirect to OTP verification
            window.location.href = '/verify-otp';
          } else {
            // Handle validation errors from server
            const data = await response.json();
            
            // Show error message
            const errorAlert = document.createElement('div');
            errorAlert.className = 'alert alert-danger mt-3';
            errorAlert.textContent = data.error || 'An error occurred during signup';
            form.insertBefore(errorAlert, form.firstChild);
            
            // Auto-remove error after 5 seconds
            setTimeout(() => {
              errorAlert.remove();
            }, 5000);
          }
        } catch (error) {
          console.error('Signup error:', error);
          // Fallback to regular form submission
          form.submit();
        } finally {
          // Reset button state
          submitBtn.classList.remove('btn-loading');
          submitBtn.disabled = false;
          submitBtn.innerHTML = 'Sign Up';
        }
      });
      
      // Add ripple effect to button
      submitBtn.addEventListener('click', function(e) {
        const ripple = document.createElement('span');
        const rect = this.getBoundingClientRect();
        const size = Math.max(rect.width, rect.height);
        const x = e.clientX - rect.left - size / 2;
        const y = e.clientY - rect.top - size / 2;
        
        ripple.style.width = ripple.style.height = size + 'px';
        ripple.style.left = x + 'px';
        ripple.style.top = y + 'px';
        ripple.classList.add('ripple');
        
        this.appendChild(ripple);
        
        setTimeout(() => {
          ripple.remove();
        }, 600);
      });
      
      // Enhanced input focus effects
      const inputs = document.querySelectorAll('.form-control');
      inputs.forEach(input => {
        input.addEventListener('focus', function() {
          this.parentElement.classList.add('focused');
        });
        
        input.addEventListener('blur', function() {
          if (!this.value) {
            this.parentElement.classList.remove('focused');
          }
        });
      });
    });
  </script>
  
  <style>
    .ripple {
      position: absolute;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.6);
      transform: scale(0);
      animation: ripple-animation 0.6s linear;
      pointer-events: none;
    }
    
    @keyframes ripple-animation {
      to {
        transform: scale(2);
        opacity: 0;
      }
    }
    
    /* Validation styles */
    .form-control.is-valid {
      border-color: #28a745;
      box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
    }
    
    .form-control.is-invalid {
      border-color: #dc3545;
      box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
    }
    
    .invalid-feedback {
      display: none;
      width: 100%;
      margin-top: 0.25rem;
      font-size: 0.875em;
      color: #dc3545;
    }
    
    .form-control.is-invalid ~ .invalid-feedback {
      display: block;
    }
  </style>
</body>
</html>
